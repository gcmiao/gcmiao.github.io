<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chang&#39;s Pages</title>
  
  
  <link href="https://gcmiao.github.io/atom.xml" rel="self"/>
  
  <link href="https://gcmiao.github.io/"/>
  <updated>2020-10-06T20:52:34.361Z</updated>
  <id>https://gcmiao.github.io/</id>
  
  <author>
    <name>Chang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Access enoki::DynamicArray with Packet Index</title>
    <link href="https://gcmiao.github.io/2020/10/06/Others/access_array_with_packet_index/"/>
    <id>https://gcmiao.github.io/2020/10/06/Others/access_array_with_packet_index/</id>
    <published>2020-10-06T19:52:29.000Z</published>
    <updated>2020-10-06T20:52:34.361Z</updated>
    
    <content type="html"><![CDATA[<p>In <code>enoki</code> library v0.1.0, the <code>operator []</code> of the <code>DynamicArray&lt;Packet&lt;...&gt;&gt;</code>, which stores <code>Packet</code> data, only accepts integer argument. Here is an example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">constexpr size_t PacketSize &#x3D; enoki::max_packet_size &#x2F; sizeof(float); &#x2F;&#x2F; &#x3D; 8</span><br><span class="line">using FloatP   &#x3D; Packet&lt;float, PacketSize&gt;;</span><br><span class="line">using FloatX   &#x3D; DynamicArray&lt;FloatP&gt;;</span><br><span class="line"></span><br><span class="line">FloatX data(-1.f, 1.f, 2.f, 3.f, 4.f, 5.f, 6.f, 7.f, 8.f, 9.f, 10.f);</span><br></pre></td></tr></table></figure><p>Of course we can access the tenth element by <code>data[9]</code>. Also, we can access it using <code>enoki::slice(data, 9)</code> because it is accually the tenth slice in the dynamic array. Besides, since the <code>PacketSize</code> is 8, the tenth element is located in the second place of the second packet. We can access it with <code>enoki::packet(data, 1)[1]</code> as well.</p><p>But what if we want to access <code>data</code> using an index that is encapsulated in struct <code>Packet</code>?</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">using UInt32P &#x3D; Packet&lt;uint32_t, PacketSize&gt;;</span><br><span class="line">UInt32P index;</span><br><span class="line">FloatP data_i &#x3D; data[index]; &#x2F;&#x2F; Wrong</span><br><span class="line">FloatP data_i &#x3D; enoki::gather(data, index); &#x2F;&#x2F; Right</span><br></pre></td></tr></table></figure><p>We cannot access it using <code>data[index]</code> because there is no overload of <code>operator []</code> for struct <code>Packet</code>. In this case, we should use <code>enoki::gather</code> instead and get the result in <code>FloatP</code> which has the same size and the value type with <code>index</code> and <code>data</code> respectively. According to the <a href="https://enoki.readthedocs.io/en/master/reference.html#memory-operations">official document</a>, it is equivalent to the following scalar loop.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FloatP result;</span><br><span class="line">for (size_t i &#x3D; 0; i &lt; index.size(); ++i)</span><br><span class="line">    result[i] &#x3D; ((float *) data.data())[index[i]];</span><br></pre></td></tr></table></figure><p>We can get better performance with <code>enoki::gather</code> if the target hardware supports the specific instructions.</p><p>More information: <a href="https://enoki.readthedocs.io/en/master/reference.html#memory-operations">Reference of enoki</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In &lt;code&gt;enoki&lt;/code&gt; library v0.1.0, the &lt;code&gt;operator []&lt;/code&gt; of the &lt;code&gt;DynamicArray&amp;lt;Packet&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt;, which store</summary>
      
    
    
    
    <category term="Others" scheme="https://gcmiao.github.io/categories/Others/"/>
    
    
    <category term="enoki" scheme="https://gcmiao.github.io/tags/enoki/"/>
    
  </entry>
  
  <entry>
    <title>Beware of VK_IMAGE_LAYOUT_UNDEFINED</title>
    <link href="https://gcmiao.github.io/2020/09/11/Vulkan/beware_of_vk_image_layout_undefined/"/>
    <id>https://gcmiao.github.io/2020/09/11/Vulkan/beware_of_vk_image_layout_undefined/</id>
    <published>2020-09-11T19:13:23.000Z</published>
    <updated>2020-10-06T20:52:34.361Z</updated>
    
    <content type="html"><![CDATA[<p>As a novice of Vulkan, when I first use <code>VkImageMemoryBarrier</code>, I intuitively thought that <code>VK_IMAGE_LAYOUT_UNDEFINED</code> is a sugar of setting the <code>oldLayout</code>. After I did this last time, it left a hidden danger to me.</p><p>According to the <a href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#synchronization-image-layout-transitions">official document</a>:</p><blockquote><p>The old layout must either be VK_IMAGE_LAYOUT_UNDEFINED, or match the current layout of the image subresource range.<br>If the old layout <strong>matches the current layout</strong> of the image subresource range, the transition <strong>preserves</strong> the contents of that range.<br>If the old layout is <code>VK_IMAGE_LAYOUT_UNDEFINED</code>, the contents of that range may be <strong>discarded</strong>.</p></blockquote><p>In this way, we’d better <strong>ALWAYS</strong> use a proper old layout unless we really don’t care about the existing content of the image.</p><p>More information: <a href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#synchronization-image-layout-transitions">Image Layout Transitions</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;As a novice of Vulkan, when I first use &lt;code&gt;VkImageMemoryBarrier&lt;/code&gt;, I intuitively thought that &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/co</summary>
      
    
    
    
    <category term="Vulkan" scheme="https://gcmiao.github.io/categories/Vulkan/"/>
    
    
    <category term="Vulkan" scheme="https://gcmiao.github.io/tags/Vulkan/"/>
    
  </entry>
  
  <entry>
    <title>Get Depth Value of Depth Buffer</title>
    <link href="https://gcmiao.github.io/2020/09/11/UnrealEngine/DevelopmentTips/get_real_depth_value/"/>
    <id>https://gcmiao.github.io/2020/09/11/UnrealEngine/DevelopmentTips/get_real_depth_value/</id>
    <published>2020-09-11T14:51:00.000Z</published>
    <updated>2020-10-06T20:52:34.361Z</updated>
    
    <content type="html"><![CDATA[<p>In the material editor, when we use the node <code>SceneTexture</code> with texture id <code>SceneDepth</code>, we get the scene depth in clip space. However, we want to get the depth value(called <code>DeviceZ</code> in <code>Common.ush</code>) that is stored in the depth buffer. We can use the function <code>float ConvertToDeviceZ(float SceneDepth)</code> and <code>float ConvertFromDeviceZ(float DeviceZ)</code> to convert between each other.</p><p>Since there is no dedicated expression node for either of them, we have to create a custom material expression manually.</p><ol><li>Create a custom material expression with an input node <code>SceneDepth</code> and an output type <code>CMOT Float 1</code>.</li><li>Add <code>ConvertToDeviceZ(SceneDepth)</code> to the <code>Code</code> field.</li><li>Pass the result of <code>SceneTexture:SceneDepth</code> to the custom expression node.</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In the material editor, when we use the node &lt;code&gt;SceneTexture&lt;/code&gt; with texture id &lt;code&gt;SceneDepth&lt;/code&gt;, we get the scene depth in</summary>
      
    
    
    
    <category term="Unreal Engine" scheme="https://gcmiao.github.io/categories/Unreal-Engine/"/>
    
    <category term="Development Tips" scheme="https://gcmiao.github.io/categories/Unreal-Engine/Development-Tips/"/>
    
    
    <category term="UE4" scheme="https://gcmiao.github.io/tags/UE4/"/>
    
    <category term="Material" scheme="https://gcmiao.github.io/tags/Material/"/>
    
  </entry>
  
  <entry>
    <title>Three Steps to Eliminate Lag of Camera Movement</title>
    <link href="https://gcmiao.github.io/2020/09/11/UnrealEngine/DevelopmentTips/camera_movement_lag/"/>
    <id>https://gcmiao.github.io/2020/09/11/UnrealEngine/DevelopmentTips/camera_movement_lag/</id>
    <published>2020-09-11T13:16:25.000Z</published>
    <updated>2020-10-06T20:52:34.361Z</updated>
    
    <content type="html"><![CDATA[<p>In the project of my HiWi job, the lag of camera translation and rotation is highly noticeable even if I move it slowly. It delayed more than 3 frames visually. Here are 4 places need to be check if the same problem happened to you.</p><ol><li>Don’t get the transformation from <code>AActor::GetActorLocatino()</code> and <code>APlayerController::GetControlRotation()</code>. Instead, get location and rotation from <code>APlayerCameraManager::GetCameraCachePOV().Location/Rotation</code>.</li><li>Change the tick group, which the getter of transformation is called from, to <code>Post Update Work</code> instead of <code>During Physics</code></li><li>Set CVar <code>r.OneFrameThreadLag</code> to 0. You can do this in the <code>BeginPlay</code> event.</li></ol><p>More information:</p><ol><li><a href="https://docs.unrealengine.com/en-US/API/Runtime/Engine/Engine/ETickingGroup/index.html">ETickingGroup</a></li><li><a href="https://docs.unrealengine.com/en-US/Platforms/LowLatencyFrameSyncing/index.html">Low Latency Frame Syncing</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In the project of my HiWi job, the lag of camera translation and rotation is highly noticeable even if I move it slowly. It delayed more </summary>
      
    
    
    
    <category term="Unreal Engine" scheme="https://gcmiao.github.io/categories/Unreal-Engine/"/>
    
    <category term="Development Tips" scheme="https://gcmiao.github.io/categories/Unreal-Engine/Development-Tips/"/>
    
    
    <category term="UE4" scheme="https://gcmiao.github.io/tags/UE4/"/>
    
    <category term="Camera" scheme="https://gcmiao.github.io/tags/Camera/"/>
    
  </entry>
  
  <entry>
    <title>Convert Coordinate in Left-handed System to Right-handed System</title>
    <link href="https://gcmiao.github.io/2020/06/07/ComputerGraphics/left_hand_to_right_hand/"/>
    <id>https://gcmiao.github.io/2020/06/07/ComputerGraphics/left_hand_to_right_hand/</id>
    <published>2020-06-07T08:12:26.000Z</published>
    <updated>2020-10-06T20:52:34.361Z</updated>
    
    <content type="html"><![CDATA[<p>UE4 is using left-handed coordinate system which is clockwise when viewing from the top. However the data we use is sampled in right-handed system which is counter-clockwise when viewing from the top. If we use the data directly in UE4, we gets a lying down viewport. So we have to convert the coordinate into left-handed coordinate system at first.</p><p>We have already known that $Coordinate;in;Screen;Space = Projection Matrix \times View Matrix \times Model Matrix \times Coordinate;in;Local;Space$. The coordinate conversion happens in <em>World Space</em> that we can get from $Model Matrix \times Coordinate;in;Local;Space$. The only thing we need to do is modifying the <em>Model Matrix</em> that is equal to $Translation \times Rotation \times Scale$. But we cannot simplely multipy an extra rotation matrix on the left or right side because it will break the construction order of model matrix. So We have to transfer each component of model matrix respectively.</p><p>For example, we need to convert a position $(x, y, z)$ to $(-z, x, y)$, the new position is $x’ = y, y’ = z, z’ = -x$. We can get translation component from model matrix directly then shift the three axes.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto translation &#x3D; modelMatrix[3]</span><br><span class="line">auto newTrans &#x3D; glm::vec3(translation.y, translation.z, -translation.x)</span><br></pre></td></tr></table></figure><p> For rotation, we can convert the rotation matrix without scale into quaternion and shift the three axes as before in quaternion then convert it back to rotation matrix. It is easier to do based on glm library than constructing a rotation matrix.<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto newQuat &#x3D; glm::quat(oldQuat.W, oldQuat.Y, oldQuat.Z, -oldQuat.X);</span><br><span class="line">auto rotMat &#x3D; glm::mat3_cast(newQuat);</span><br></pre></td></tr></table></figure><br>For scale, I haven’t tried it yet but it would be similar.</p><hr><table style="text-align:left">  <tr>    <td style="border:none;padding: 0px;">        <sup>For any problems about this article, feel free to rise an issue to me.</sup>        <!-- Place this tag in your head or just before your close body tag. -->        <script async defer src="https://buttons.github.io/buttons.js"></script>        <!-- Place this tag where you want the button to render. -->        <a class="github-button" href="https://github.com/gcmiao/gcmiao.github.io/issues" data-icon="octicon-issue-opened" aria-label="Issue gcmiao/gcmiao.github.io on GitHub">Issue</a>    </td>  </tr>  <tr>    <td style="border:none;padding: 0px;">        <sup>If this article is usful for you, welcome to follow my github.</sup>        <!-- Place this tag where you want the button to render. -->        <a class="github-button" href="https://github.com/gcmiao" aria-label="Follow @gcmiao on GitHub">Follow @gcmiao</a>    </td>  </tr></table><p><a href="/">Go back Home</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;UE4 is using left-handed coordinate system which is clockwise when viewing from the top. However the data we use is sampled in right-hand</summary>
      
    
    
    
    <category term="Computer Graphics" scheme="https://gcmiao.github.io/categories/Computer-Graphics/"/>
    
    
  </entry>
  
  <entry>
    <title>How to Enable Vulkan Validation Layer</title>
    <link href="https://gcmiao.github.io/2020/04/26/UnrealEngine/DebugTips/enable_vulkan_validation/"/>
    <id>https://gcmiao.github.io/2020/04/26/UnrealEngine/DebugTips/enable_vulkan_validation/</id>
    <published>2020-04-26T16:44:39.000Z</published>
    <updated>2020-10-06T20:52:34.361Z</updated>
    
    <content type="html"><![CDATA[<p>Vulkan validation layer in UE4 is not enabled by default. We can see the codes in <code>VulkanLayers.cpp</code> around line 300:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> int32 VulkanValidationOption = GValidationCvar.GetValueOnAnyThread();</span><br><span class="line"><span class="keyword">if</span> (!bVkTrace &amp;&amp; VulkanValidationOption &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The validation layer will be enabled only if <code>VulkanValidationOption</code> has a proper non-zero value when creating <code>VkInstance</code>. The GValidationCvar is defined at the begining of the same file like this:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">TAutoConsoleVariable&lt;int32&gt; <span class="title">GValidationCvar</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">TEXT(<span class="string">&quot;r.Vulkan.EnableValidation&quot;</span>),</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">TEXT(<span class="string">&quot;0 to disable validation layers (default)\n&quot;</span>)</span></span></span><br><span class="line"><span class="function"><span class="params">TEXT(<span class="string">&quot;1 to enable errors\n&quot;</span>)</span></span></span><br><span class="line"><span class="function"><span class="params">TEXT(<span class="string">&quot;2 to enable errors &amp; warnings\n&quot;</span>)</span></span></span><br><span class="line"><span class="function"><span class="params">TEXT(<span class="string">&quot;3 to enable errors, warnings &amp; performance warnings\n&quot;</span>)</span></span></span><br><span class="line"><span class="function"><span class="params">TEXT(<span class="string">&quot;4 to enable errors, warnings, performance &amp; information messages\n&quot;</span>)</span></span></span><br><span class="line"><span class="function"><span class="params">TEXT(<span class="string">&quot;5 to enable all messages&quot;</span>),</span></span></span><br><span class="line"><span class="function"><span class="params">ECVF_ReadOnly | ECVF_RenderThreadSafe</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>We have several options of validation level, and the default value is 0.</p><p>Of course we can assign a new value to GValidationCvar. But make sure it is setted before creating ‘VKInstance’.<br>Another safe way to do this is add startup argument ‘vulkanvalidation=(xxx)’ to your project or UE4 project property. You don’t even need to modify any codes by this way.</p><hr><table style="text-align:left">  <tr>    <td style="border:none;padding: 0px;">        <sup>For any problems about this article, feel free to rise an issue to me.</sup>        <!-- Place this tag in your head or just before your close body tag. -->        <script async defer src="https://buttons.github.io/buttons.js"></script>        <!-- Place this tag where you want the button to render. -->        <a class="github-button" href="https://github.com/gcmiao/gcmiao.github.io/issues" data-icon="octicon-issue-opened" aria-label="Issue gcmiao/gcmiao.github.io on GitHub">Issue</a>    </td>  </tr>  <tr>    <td style="border:none;padding: 0px;">        <sup>If this article is usful for you, welcome to follow my github.</sup>        <!-- Place this tag where you want the button to render. -->        <a class="github-button" href="https://github.com/gcmiao" aria-label="Follow @gcmiao on GitHub">Follow @gcmiao</a>    </td>  </tr></table><p><a href="/">Go back Home</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Vulkan validation layer in UE4 is not enabled by default. We can see the codes in &lt;code&gt;VulkanLayers.cpp&lt;/code&gt; around line 300:&lt;/p&gt;
&lt;fig</summary>
      
    
    
    
    <category term="Unreal Engine" scheme="https://gcmiao.github.io/categories/Unreal-Engine/"/>
    
    <category term="Debug Tips" scheme="https://gcmiao.github.io/categories/Unreal-Engine/Debug-Tips/"/>
    
    
    <category term="Vulkan" scheme="https://gcmiao.github.io/tags/Vulkan/"/>
    
    <category term="UE4" scheme="https://gcmiao.github.io/tags/UE4/"/>
    
  </entry>
  
  <entry>
    <title>Why Cannot We See Source Files in Visual Studio</title>
    <link href="https://gcmiao.github.io/2020/04/05/UnrealEngine/BuildTips/show_source_files/"/>
    <id>https://gcmiao.github.io/2020/04/05/UnrealEngine/BuildTips/show_source_files/</id>
    <published>2020-04-05T19:43:10.000Z</published>
    <updated>2020-10-06T20:52:34.361Z</updated>
    
    <content type="html"><![CDATA[<p>In my current project, I need to add a third party library with source files. Before this, I only have expericence that adding prebuilt library such as .lib files. This time, I create a new folder and module files, i.e. IXXLib.h， XXLib.cpp and XXLib.build.cs, under the path <em>‘UnrealEngine\Engine\Plugins\MyPlugin\Source\ThirdParty\XXLib’</em> because I don’t want to expose it to other modules explicitly. But After I regenerating the project file, I didn’t find any files under the folder except those three module files.</p><p>In default, all source files will be discovered recursively. There should be no reason to be empty. So I debuged into the UnrealBuildTool([see details here]) and found a wordless things that UBT will check if the module path contains <em>‘ThirdParty’</em> in order to determine to add source files or not. The related codes are in ProjectFileGenerator.cs, Line 1961:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// We&#x27;ll keep track of whether this is an &quot;engine&quot; or &quot;external&quot; module.  This is determined below while loading module rules.</span></span><br><span class="line"><span class="keyword">bool</span> IsThirdPartyModule = CurModuleFile.ContainsNam(<span class="string">&quot;ThirdParty&quot;</span>, UnrealBuildTool.RootDirectory);</span><br></pre></td></tr></table></figure><p>and Line 1995:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> SearchSubdirectories = !IsThirdPartyModule || bGatherThirdPartySource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( bGatherThirdPartySource )</span><br><span class="line">&#123;</span><br><span class="line">    Log.TraceInformation( <span class="string">&quot;Searching for third-party source files...&quot;</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Find all of the source files (and other files) and add them to the project</span></span><br><span class="line">List&lt;FileReference&gt; FoundFiles = SourceFileSearch.FindModuleSourceFiles( CurModuleFile, SearchSubdirectories:SearchSubdirectories );</span><br></pre></td></tr></table></figure><p>Hence, we have two ways to solve this problem. The intuitive way is modifying the path of the third party library such as replacing <em>‘ThirdParty’</em> to <em>‘External’</em> and promising that there are no more <em>‘ThirdParty’</em> words in the path.<br>The other ways is adding an argument <code>-THIRDPARTY</code> when executing GenerateProjectFiles.bat. You can find the source at Line 1127:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">&quot;-THIRDPARTY&quot;</span>:</span><br><span class="line">    bGatherThirdPartySource = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>The disadvantage of the later method is that it will import all source files under <code>Thirdparty</code> folders and make the project file very big.</p><hr><table style="text-align:left">  <tr>    <td style="border:none;padding: 0px;">        <sup>For any problems about this article, feel free to rise an issue to me.</sup>        <!-- Place this tag in your head or just before your close body tag. -->        <script async defer src="https://buttons.github.io/buttons.js"></script>        <!-- Place this tag where you want the button to render. -->        <a class="github-button" href="https://github.com/gcmiao/gcmiao.github.io/issues" data-icon="octicon-issue-opened" aria-label="Issue gcmiao/gcmiao.github.io on GitHub">Issue</a>    </td>  </tr>  <tr>    <td style="border:none;padding: 0px;">        <sup>If this article is usful for you, welcome to follow my github.</sup>        <!-- Place this tag where you want the button to render. -->        <a class="github-button" href="https://github.com/gcmiao" aria-label="Follow @gcmiao on GitHub">Follow @gcmiao</a>    </td>  </tr></table><p><a href="/">Go back Home</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In my current project, I need to add a third party library with source files. Before this, I only have expericence that adding prebuilt l</summary>
      
    
    
    
    <category term="Unreal Engine" scheme="https://gcmiao.github.io/categories/Unreal-Engine/"/>
    
    <category term="Build Tips" scheme="https://gcmiao.github.io/categories/Unreal-Engine/Build-Tips/"/>
    
    
    <category term="UE4" scheme="https://gcmiao.github.io/tags/UE4/"/>
    
  </entry>
  
  <entry>
    <title>How to Debug UnrealBuildTool</title>
    <link href="https://gcmiao.github.io/2020/04/05/UnrealEngine/DebugTips/debug_ubt/"/>
    <id>https://gcmiao.github.io/2020/04/05/UnrealEngine/DebugTips/debug_ubt/</id>
    <published>2020-04-05T19:43:02.000Z</published>
    <updated>2020-10-06T20:52:34.361Z</updated>
    
    <content type="html"><![CDATA[<p>Steps:</p><ol><li>Set UnrealBuildTool as startup project.</li><li>Open UnrealBuildTool Properties page.</li><li>Add arguments to the <em>‘Command line arguments’</em> under the section <em>‘Debug’</em><ul><li>If you want to debug the phase of generating project file, use <code>-ProjectFiles</code></li><li>If you want to debug building phase, use parameters from the <em>‘BuildCommandLine’</em> of UE4 Property Page which is exactly executed when you build the project as usual.</li></ul></li></ol><p>Tips: Sometime the break points will not be triggered without any reason. It often happens after you execute GenerateProjectFiles.bat or other scripts that call UBT from commandline. In this case, you just need to rebuild UBT.</p><p>Then you can start your debug. Have fun!</p><hr><table style="text-align:left">  <tr>    <td style="border:none;padding: 0px;">        <sup>For any problems about this article, feel free to rise an issue to me.</sup>        <!-- Place this tag in your head or just before your close body tag. -->        <script async defer src="https://buttons.github.io/buttons.js"></script>        <!-- Place this tag where you want the button to render. -->        <a class="github-button" href="https://github.com/gcmiao/gcmiao.github.io/issues" data-icon="octicon-issue-opened" aria-label="Issue gcmiao/gcmiao.github.io on GitHub">Issue</a>    </td>  </tr>  <tr>    <td style="border:none;padding: 0px;">        <sup>If this article is usful for you, welcome to follow my github.</sup>        <!-- Place this tag where you want the button to render. -->        <a class="github-button" href="https://github.com/gcmiao" aria-label="Follow @gcmiao on GitHub">Follow @gcmiao</a>    </td>  </tr></table><p><a href="/">Go back Home</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Set UnrealBuildTool as startup project.&lt;/li&gt;
&lt;li&gt;Open UnrealBuildTool Properties page.&lt;/li&gt;
&lt;li&gt;Add arguments to the </summary>
      
    
    
    
    <category term="Unreal Engine" scheme="https://gcmiao.github.io/categories/Unreal-Engine/"/>
    
    <category term="Debug Tips" scheme="https://gcmiao.github.io/categories/Unreal-Engine/Debug-Tips/"/>
    
    
    <category term="UE4" scheme="https://gcmiao.github.io/tags/UE4/"/>
    
  </entry>
  
</feed>
